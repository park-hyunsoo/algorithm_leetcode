# 리스트 역순 덧셈 후 역순 저장

# 리스트로 변경하고 이를 역순으로 만든 후
# 숫자형으로 만들어 덧셈하고 다시 역순 리스트를 만듬
class Solution:
    def addTwoNumbers(self, l1: ListNode, l2: ListNode) -> ListNode:
        def toList(node:ListNode) -> List:
            list: List =[]
            while node:
                list.append(node.val)
                node = node.next
            return list
        
        def toReversedLinkedList(result:List) -> ListNode:
            prev: ListNode = None
            for r in result:
                node = ListNode(r)
                node.next = prev
                prev = node
                
            return node
        
        a = toList(l1)[::-1]
        b = toList(l2)[::-1]
        
        resultStr = int(''.join(str(e) for e in a)) + int(''.join(str(e) for e in b))
        
        return toReversedLinkedList(str(resultStr))
        
        
# 왼쪽 부터 더하고 자리 가 넘어가면 
# 그 다음에 더해준다. 
class Solution:
    def addTwoNumbers(self, l1: ListNode, l2: ListNode) -> ListNode:
        root = head = ListNode(0)
        
        carry = 0
        while l1 or l2 or carry:
            sum = 0
            if l1:
                sum += l1.val
                l1 = l1.next
            if l2:
                sum += l2.val
                l2 = l2.next
                
            carry, val = divmod(sum + carry, 10)
            # 기존 자리 올림수를 더하고 그 값을 나누어 몫을 다시 자리 올림수로
            head.next = ListNode(val)
            head = head.next
            
        return root.next
    
            
            
